; Generated by SMPS2ASM Scripter beta 0.1
ExtraLife_Header:
	sHeaderInit
	sHeaderTempo	$A2, $05
	sHeaderCh	$05, $03
	sHeaderDAC	ExtraLife_DAC1
	sHeaderDAC	ExtraLife_DAC2
	sHeaderFM	ExtraLife_FM1, $0C, $08
	sHeaderFM	ExtraLife_FM2, $0C, $19
	sHeaderFM	ExtraLife_FM3, $00, $0D
	sHeaderFM	ExtraLife_FM4, $18, $1B
	sHeaderFM	ExtraLife_FM5, $0C, $12
	sHeaderPSG	ExtraLife_PSG1, $00, $08, $00, vNone
	sHeaderPSG	ExtraLife_PSG2, $00, $08, $00, vNone
	sHeaderPSG	ExtraLife_PSG3, $00, $00, $00, vNone

	; Patch $00
	; $3B
	; $0D, $01, $00, $00,	$9F, $1F, $1F, $1F
	; $0E, $0D, $09, $09,	$00, $00, $00, $00
	; $DF, $DF, $DF, $DF,	$33, $15, $17, $80
	spAlgorithm	$03
	spFeedback	$07
	spDetune	$00, $00, $00, $00
	spMultiple	$0D, $00, $01, $00
	spRateScale	$02, $00, $00, $00
	spAttackRt	$1F, $1F, $1F, $1F
	spAmpMod	$00, $00, $00, $00
	spSustainRt	$0E, $09, $0D, $09
	spSustainLv	$0D, $0D, $0D, $0D
	spDecayRt	$00, $00, $00, $00
	spReleaseRt	$0F, $0F, $0F, $0F
	spSSGEG		$00, $00, $00, $00
	spTotalLv	$33, $17, $15, $00

	; Patch $01
	; $3A
	; $01, $07, $01, $01,	$8E, $8E, $8D, $53
	; $0E, $0E, $0E, $03,	$00, $00, $00, $07
	; $1F, $FF, $1F, $0F,	$18, $28, $27, $80
	spAlgorithm	$02
	spFeedback	$07
	spDetune	$00, $00, $00, $00
	spMultiple	$01, $01, $07, $01
	spRateScale	$02, $02, $02, $01
	spAttackRt	$0E, $0D, $0E, $13
	spAmpMod	$00, $00, $00, $00
	spSustainRt	$0E, $0E, $0E, $03
	spSustainLv	$01, $01, $0F, $00
	spDecayRt	$00, $00, $00, $07
	spReleaseRt	$0F, $0F, $0F, $0F
	spSSGEG		$00, $00, $00, $00
	spTotalLv	$18, $27, $28, $00

	; Patch $02
	; $3C
	; $01, $02, $0F, $04,	$8D, $52, $9F, $1F
	; $09, $00, $00, $0D,	$00, $00, $00, $00
	; $23, $08, $02, $F7,	$15, $80, $1D, $87
	spAlgorithm	$04
	spFeedback	$07
	spDetune	$00, $00, $00, $00
	spMultiple	$01, $0F, $02, $04
	spRateScale	$02, $02, $01, $00
	spAttackRt	$0D, $1F, $12, $1F
	spAmpMod	$00, $00, $00, $00
	spSustainRt	$09, $00, $00, $0D
	spSustainLv	$02, $00, $00, $0F
	spDecayRt	$00, $00, $00, $00
	spReleaseRt	$03, $02, $08, $07
	spSSGEG		$00, $00, $00, $00
	spTotalLv	$15, $1D, $00, $07

	; Patch $03
	; $3D
	; $01, $01, $01, $01,	$94, $19, $19, $19
	; $0F, $0D, $0D, $0D,	$07, $04, $04, $04
	; $25, $1A, $1A, $1A,	$15, $80, $80, $80
	spAlgorithm	$05
	spFeedback	$07
	spDetune	$00, $00, $00, $00
	spMultiple	$01, $01, $01, $01
	spRateScale	$02, $00, $00, $00
	spAttackRt	$14, $19, $19, $19
	spAmpMod	$00, $00, $00, $00
	spSustainRt	$0F, $0D, $0D, $0D
	spSustainLv	$02, $01, $01, $01
	spDecayRt	$07, $04, $04, $04
	spReleaseRt	$05, $0A, $0A, $0A
	spSSGEG		$00, $00, $00, $00
	spTotalLv	$15, $00, $00, $00

ExtraLife_FM5:
	dc.b nRst, $02

ExtraLife_FM1:
	sVoice		$01
	sModAMPS	$13, $01, $06, $06
	dc.b nB3, $03, nRst, nB3, $06, nC4, $03, nRst
	dc.b nC4, $06, nD4, $03, sHold, nEb4, $02, sHold
	dc.b nE4, $02, sHold, nF4, $02, sHold, nFs4, $09
	dc.b nD4, $06, nG4, $03, nRst, nG4, $02, nRst
	dc.b $01, nG4, $02, nRst, $01, nG4, $04, nRst
	dc.b $02, nG4, $04, nRst, $02, nG4, $0C
	sStop

ExtraLife_FM2:
	dc.b nRst, $01
	sVoice		$03
	sModAMPS	$14, $01, $06, $06
	ssDetune	$03
	dc.b nG3, $03, nRst, nG3, $06, nA3, $03, nRst
	dc.b nA3, $06, nB3, $09, nRst, $03, nA3, $09
	dc.b nRst, $03, nG3, $03, nRst, nG3, $02, nRst
	dc.b $01, nG3, $02, nRst, $01, nG3, $04, nRst
	dc.b $02, nG3, $04, nRst, $02, nG3, $0C
	sStop

ExtraLife_FM3:
	sVoice		$00
	dc.b nG2, $02, nRst, $01, $03, nG3, $02, nRst
	dc.b $01, nG3, $02, nRst, $01, nA2, $02, nRst
	dc.b $01, $03, nA3, $02, nRst, $01, nA3, $02
	dc.b nRst, $01, nB2, $02, nRst, $01, $03, nB3
	dc.b $02, nRst, $01, nB3, $02, nRst, $01, nA2
	dc.b $02, nRst, $01, $03, nA3, $02, nRst, $01
	dc.b nA3, $02, nRst, $01, nG2, $05, nRst, $01
	dc.b nD2, $05, nRst, $01, nG2, $05, nRst, $01
	dc.b nD2, $05, nRst, $01, nG2, $0C
	sStop

ExtraLife_FM4:
	sVoice		$03
	dc.b nG4, $03, nF4, nD4, nF4, nG4, $03, nF4
	dc.b nD4, nF4, nG4, $03, nF4, nD4, nF4, nA4
	dc.b $03, nG4, nE4, nG4, nG4, $01, sHold, nAb4
	dc.b sHold, nA4, sHold, nBb4, sHold, nB4, sHold, nC5
	dc.b sHold, nCs5, sHold, nD5, sHold, nEb5, sHold, nE5
	dc.b sHold, nF5, sHold, nFs5, sHold, nG5, sHold, nFs5
	dc.b sHold, nF5, sHold, nE5, sHold, nEb5, sHold, nD5
	dc.b sHold, nCs5, sHold, nC5, sHold, nB4, sHold, nBb4
	dc.b sHold, nA4, sHold, nAb4, sHold, nG4, $0C
	sStop

ExtraLife_PSG1:
	sVolEnv		v0A
	dc.b nG3, $18, nA3, $18, nB3, $24
	sStop

ExtraLife_PSG2:
	sVolEnv		v0A
	dc.b nD4, $18, nFs4, $18, nG4, $24
	sStop

ExtraLife_PSG3:
	sNoisePSG	snWhitePSG3
	sVolEnv		v02
	dc.b nHiHat, $03, $03

; turns out none of these work in the original for some reason.
; you can enable them for fancier hi-hats
;	saVol		-$20
;	dc.b $03, $03
;	saVol		$20
;	dc.b $03, $03
;	saVol		-$20
;	dc.b $03, $03
;	saVol		$20
;	dc.b $03, $03
;	saVol		-$20
;	dc.b $03, $03
;	saVol		$20
;	dc.b $03, $03
;	saVol		-$20
;	dc.b $03, $03
;	saVol		$20
;	dc.b $03, $03
;	saVol		-$20
;	dc.b $03, $03
;	saVol		$20
;	dc.b $03, $03
;	saVol		-$20
;	dc.b $03, $03
;	saVol		$20
;	dc.b $0C
	sStop

ExtraLife_DAC2:
	dc.b nRst, $30, dHighTimpani, $06, dLowTimpani, dHighTimpani, dLowTimpani, dHighTimpani
	dc.b $18
	sBackup

ExtraLife_DAC1:
	sStop
